// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`QuestionsScreen component tests Should render QuestionsScreen component successfully (without content) 1`] = `
<RCTScrollView
  automaticallyAdjustContentInsets={false}
  contentContainerStyle={
    Array [
      Object {
        "alignItems": "center",
        "flex": 1,
      },
      Object {
        "backgroundColor": "#fff",
      },
    ]
  }
  contentInset={
    Object {
      "bottom": 0,
    }
  }
  enableAutomaticScroll={true}
  enableOnAndroid={false}
  enableResetScrollToCoords={false}
  extraHeight={75}
  extraScrollHeight={0}
  getScrollResponder={[Function]}
  handleOnScroll={[Function]}
  keyboardDismissMode="interactive"
  keyboardOpeningTime={250}
  keyboardSpace={0}
  onScroll={[Function]}
  resetKeyboardSpace={[Function]}
  scrollEventThrottle={1}
  scrollForExtraHeightOnAndroid={[Function]}
  scrollIntoView={[Function]}
  scrollToEnd={[Function]}
  scrollToFocusedInput={[Function]}
  scrollToPosition={[Function]}
  showsVerticalScrollIndicator={true}
  update={[Function]}
  viewIsInsideTabBar={false}
>
  <View>
    <View
      style={
        Array [
          Object {
            "flexDirection": "row",
            "height": 100,
            "width": "100%",
          },
          undefined,
        ]
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
            "width": "100%",
          }
        }
      >
        <View
          style={
            Object {
              "flex": 1,
            }
          }
        >
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignSelf": "flex-start",
                "backgroundColor": "transparent",
                "flexDirection": "row",
                "marginLeft": 20,
                "opacity": 1,
                "shadowColor": "rgba(0, 0, 0, 0.8)",
                "shadowOffset": Object {
                  "height": 1,
                  "width": 1,
                },
                "shadowOpacity": 1,
                "shadowRadius": 1,
              }
            }
          >
            <View
              buttonColor="#00ff00"
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "borderBottomColor": "transparent",
                    "borderBottomWidth": 35,
                    "borderColor": "#00ff00",
                    "borderRightWidth": 30,
                    "borderStyle": "solid",
                    "borderTopColor": "transparent",
                    "borderTopWidth": 35,
                    "height": 0,
                    "width": 0,
                  },
                  undefined,
                ]
              }
            />
            <View
              buttonColor="#00ff00"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#00ff00",
                    "height": 70,
                    "justifyContent": "center",
                    "minWidth": 220,
                    "paddingBottom": 15,
                    "paddingLeft": 15,
                    "paddingRight": 15,
                    "paddingTop": 15,
                  },
                  undefined,
                ]
              }
            >
              <Text
                fontFamily="Arial"
                style={
                  Array [
                    Object {
                      "color": "#fff",
                      "fontFamily": "Arial",
                      "fontSize": 28,
                    },
                    undefined,
                  ]
                }
                textColor="#fff"
                textSize={28}
              >
                
              </Text>
            </View>
          </View>
        </View>
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "height": "100%",
              "left": 0,
              "opacity": 1,
              "position": "absolute",
              "top": 0,
              "width": 80,
            }
          }
        />
        <View
          style={
            Object {
              "flex": 1,
            }
          }
        >
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignSelf": "flex-end",
                "backgroundColor": "transparent",
                "flexDirection": "row",
                "marginRight": 20,
                "opacity": 1,
                "shadowColor": "rgba(0, 0, 0, 0.8)",
                "shadowOffset": Object {
                  "height": 1,
                  "width": 1,
                },
                "shadowOpacity": 1,
                "shadowRadius": 1,
              }
            }
          >
            <View
              buttonColor="#00ff00"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#00ff00",
                    "height": 70,
                    "justifyContent": "center",
                    "minWidth": 220,
                    "paddingBottom": 15,
                    "paddingLeft": 15,
                    "paddingRight": 15,
                    "paddingTop": 15,
                  },
                  undefined,
                ]
              }
            >
              <Text
                fontFamily="Arial"
                style={
                  Array [
                    Object {
                      "color": "#fff",
                      "fontFamily": "Arial",
                      "fontSize": 28,
                    },
                    undefined,
                  ]
                }
                textColor="#fff"
                textSize={28}
              >
                
              </Text>
            </View>
            <View
              buttonColor="#00ff00"
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "borderBottomColor": "transparent",
                    "borderBottomWidth": 35,
                    "borderColor": "#00ff00",
                    "borderLeftWidth": 30,
                    "borderStyle": "solid",
                    "borderTopColor": "transparent",
                    "borderTopWidth": 35,
                    "height": 0,
                    "width": 0,
                  },
                  undefined,
                ]
              }
            />
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#F80347",
            "justifyContent": "center",
            "marginTop": 80,
            "padding": 20,
            "width": "100%",
          },
          Object {
            "backgroundColor": "#00ff00",
          },
          Object {
            "marginTop": 0,
          },
        ]
      }
    >
      <Text
        style={
          Array [
            Object {
              "color": "#fff",
              "fontFamily": "Arial",
              "fontSize": 55,
              "fontWeight": "bold",
              "textAlign": "center",
            },
            Object {
              "color": "#fff",
              "fontFamily": "Arial",
            },
          ]
        }
      >
        
      </Text>
    </View>
    <View
      style={
        Object {
          "alignItems": "flex-end",
          "flexDirection": "row",
          "height": 80,
          "justifyContent": "center",
          "width": "100%",
        }
      }
    >
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      />
      <View
        style={
          Object {
            "alignItems": "flex-end",
            "bottom": 15,
            "justifyContent": "center",
            "position": "absolute",
            "right": 50,
          }
        }
      >
        <Image
          source={
            Object {
              "uri": "printer.png",
            }
          }
          style={
            Object {
              "height": 50,
              "resizeMode": "contain",
              "width": 170,
            }
          }
        />
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`QuestionsScreen component tests Should render checkbox question 1`] = `
<RCTScrollView
  automaticallyAdjustContentInsets={false}
  contentContainerStyle={
    Array [
      Object {
        "alignItems": "center",
        "flex": 1,
      },
      Object {
        "backgroundColor": "#fff",
      },
    ]
  }
  contentInset={
    Object {
      "bottom": 0,
    }
  }
  enableAutomaticScroll={true}
  enableOnAndroid={false}
  enableResetScrollToCoords={false}
  extraHeight={75}
  extraScrollHeight={0}
  getScrollResponder={[Function]}
  handleOnScroll={[Function]}
  keyboardDismissMode="interactive"
  keyboardOpeningTime={250}
  keyboardSpace={0}
  onScroll={[Function]}
  resetKeyboardSpace={[Function]}
  scrollEventThrottle={1}
  scrollForExtraHeightOnAndroid={[Function]}
  scrollIntoView={[Function]}
  scrollToEnd={[Function]}
  scrollToFocusedInput={[Function]}
  scrollToPosition={[Function]}
  showsVerticalScrollIndicator={true}
  update={[Function]}
  viewIsInsideTabBar={false}
>
  <View>
    <View
      style={
        Array [
          Object {
            "flexDirection": "row",
            "height": 100,
            "width": "100%",
          },
          undefined,
        ]
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
            "width": "100%",
          }
        }
      >
        <View
          style={
            Object {
              "flex": 1,
            }
          }
        >
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignSelf": "flex-start",
                "backgroundColor": "transparent",
                "flexDirection": "row",
                "marginLeft": 20,
                "opacity": 1,
                "shadowColor": "rgba(0, 0, 0, 0.8)",
                "shadowOffset": Object {
                  "height": 1,
                  "width": 1,
                },
                "shadowOpacity": 1,
                "shadowRadius": 1,
              }
            }
          >
            <View
              buttonColor="#00ff00"
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "borderBottomColor": "transparent",
                    "borderBottomWidth": 35,
                    "borderColor": "#00ff00",
                    "borderRightWidth": 30,
                    "borderStyle": "solid",
                    "borderTopColor": "transparent",
                    "borderTopWidth": 35,
                    "height": 0,
                    "width": 0,
                  },
                  undefined,
                ]
              }
            />
            <View
              buttonColor="#00ff00"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#00ff00",
                    "height": 70,
                    "justifyContent": "center",
                    "minWidth": 220,
                    "paddingBottom": 15,
                    "paddingLeft": 15,
                    "paddingRight": 15,
                    "paddingTop": 15,
                  },
                  undefined,
                ]
              }
            >
              <Text
                fontFamily="Arial"
                style={
                  Array [
                    Object {
                      "color": "#fff",
                      "fontFamily": "Arial",
                      "fontSize": 28,
                    },
                    undefined,
                  ]
                }
                textColor="#fff"
                textSize={28}
              >
                
              </Text>
            </View>
          </View>
        </View>
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "height": "100%",
              "left": 0,
              "opacity": 1,
              "position": "absolute",
              "top": 0,
              "width": 80,
            }
          }
        />
        <View
          style={
            Object {
              "flex": 1,
            }
          }
        >
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignSelf": "flex-end",
                "backgroundColor": "transparent",
                "flexDirection": "row",
                "marginRight": 20,
                "opacity": 1,
                "shadowColor": "rgba(0, 0, 0, 0.8)",
                "shadowOffset": Object {
                  "height": 1,
                  "width": 1,
                },
                "shadowOpacity": 1,
                "shadowRadius": 1,
              }
            }
          >
            <View
              buttonColor="#00ff00"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#00ff00",
                    "height": 70,
                    "justifyContent": "center",
                    "minWidth": 220,
                    "paddingBottom": 15,
                    "paddingLeft": 15,
                    "paddingRight": 15,
                    "paddingTop": 15,
                  },
                  undefined,
                ]
              }
            >
              <Text
                fontFamily="Arial"
                style={
                  Array [
                    Object {
                      "color": "#fff",
                      "fontFamily": "Arial",
                      "fontSize": 28,
                    },
                    undefined,
                  ]
                }
                textColor="#fff"
                textSize={28}
              >
                
              </Text>
            </View>
            <View
              buttonColor="#00ff00"
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "borderBottomColor": "transparent",
                    "borderBottomWidth": 35,
                    "borderColor": "#00ff00",
                    "borderLeftWidth": 30,
                    "borderStyle": "solid",
                    "borderTopColor": "transparent",
                    "borderTopWidth": 35,
                    "height": 0,
                    "width": 0,
                  },
                  undefined,
                ]
              }
            />
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#F80347",
            "justifyContent": "center",
            "marginTop": 80,
            "padding": 20,
            "width": "100%",
          },
          Object {
            "backgroundColor": "#00ff00",
          },
          Object {
            "marginTop": 0,
          },
        ]
      }
    >
      <Text
        style={
          Array [
            Object {
              "color": "#fff",
              "fontFamily": "Arial",
              "fontSize": 55,
              "fontWeight": "bold",
              "textAlign": "center",
            },
            Object {
              "color": "#fff",
              "fontFamily": "Arial",
            },
          ]
        }
      >
        Question text *
      </Text>
    </View>
    <View
      style={
        Object {
          "alignItems": "stretch",
          "flex": 3,
          "paddingHorizontal": 50,
          "paddingTop": 40,
          "width": "100%",
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flex": 1,
            "justifyContent": "center",
          }
        }
      >
        <RCTScrollView
          contentContainerStyle={
            Object {
              "alignItems": "flex-start",
              "alignSelf": "center",
              "justifyContent": "center",
              "width": "50%",
            }
          }
          style={
            Object {
              "flex": 1,
              "width": "50%",
            }
          }
        >
          <View>
            <View
              accessible={true}
              isTVSelectable={true}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "flex": 1,
                  "padding": 15,
                  "width": "100%",
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <Image
                  source={
                    Object {
                      "uri": "printer.png",
                    }
                  }
                  style={
                    Object {
                      "tintColor": "#00ff00",
                    }
                  }
                />
                <Text
                  style={
                    Array [
                      Object {
                        "flex": 1,
                        "marginLeft": 10,
                      },
                      Object {
                        "fontFamily": "Arial",
                        "fontSize": 26,
                      },
                    ]
                  }
                >
                  Yes
                </Text>
              </View>
            </View>
            <View
              accessible={true}
              isTVSelectable={true}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "flex": 1,
                  "padding": 15,
                  "width": "100%",
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <Image
                  source={
                    Object {
                      "uri": "printer.png",
                    }
                  }
                  style={
                    Object {
                      "tintColor": "#00ff00",
                    }
                  }
                />
                <Text
                  style={
                    Array [
                      Object {
                        "flex": 1,
                        "marginLeft": 10,
                      },
                      Object {
                        "fontFamily": "Arial",
                        "fontSize": 26,
                      },
                    ]
                  }
                >
                  No
                </Text>
              </View>
            </View>
          </View>
        </RCTScrollView>
      </View>
    </View>
    <View
      style={
        Object {
          "alignItems": "flex-end",
          "flexDirection": "row",
          "height": 80,
          "justifyContent": "center",
          "width": "100%",
        }
      }
    >
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      />
      <View
        style={
          Object {
            "alignItems": "flex-end",
            "bottom": 15,
            "justifyContent": "center",
            "position": "absolute",
            "right": 50,
          }
        }
      >
        <Image
          source={
            Object {
              "uri": "printer.png",
            }
          }
          style={
            Object {
              "height": 50,
              "resizeMode": "contain",
              "width": 170,
            }
          }
        />
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`QuestionsScreen component tests Should render date (current) question successfully 1`] = `
<RCTScrollView
  automaticallyAdjustContentInsets={false}
  contentContainerStyle={
    Array [
      Object {
        "alignItems": "center",
        "flex": 1,
      },
      Object {
        "backgroundColor": "#fff",
      },
    ]
  }
  contentInset={
    Object {
      "bottom": 0,
    }
  }
  enableAutomaticScroll={true}
  enableOnAndroid={false}
  enableResetScrollToCoords={false}
  extraHeight={75}
  extraScrollHeight={0}
  getScrollResponder={[Function]}
  handleOnScroll={[Function]}
  keyboardDismissMode="interactive"
  keyboardOpeningTime={250}
  keyboardSpace={0}
  onScroll={[Function]}
  resetKeyboardSpace={[Function]}
  scrollEventThrottle={1}
  scrollForExtraHeightOnAndroid={[Function]}
  scrollIntoView={[Function]}
  scrollToEnd={[Function]}
  scrollToFocusedInput={[Function]}
  scrollToPosition={[Function]}
  showsVerticalScrollIndicator={true}
  update={[Function]}
  viewIsInsideTabBar={false}
>
  <View>
    <View
      style={
        Array [
          Object {
            "flexDirection": "row",
            "height": 100,
            "width": "100%",
          },
          undefined,
        ]
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
            "width": "100%",
          }
        }
      >
        <View
          style={
            Object {
              "flex": 1,
            }
          }
        >
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignSelf": "flex-start",
                "backgroundColor": "transparent",
                "flexDirection": "row",
                "marginLeft": 20,
                "opacity": 1,
                "shadowColor": "rgba(0, 0, 0, 0.8)",
                "shadowOffset": Object {
                  "height": 1,
                  "width": 1,
                },
                "shadowOpacity": 1,
                "shadowRadius": 1,
              }
            }
          >
            <View
              buttonColor="#00ff00"
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "borderBottomColor": "transparent",
                    "borderBottomWidth": 35,
                    "borderColor": "#00ff00",
                    "borderRightWidth": 30,
                    "borderStyle": "solid",
                    "borderTopColor": "transparent",
                    "borderTopWidth": 35,
                    "height": 0,
                    "width": 0,
                  },
                  undefined,
                ]
              }
            />
            <View
              buttonColor="#00ff00"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#00ff00",
                    "height": 70,
                    "justifyContent": "center",
                    "minWidth": 220,
                    "paddingBottom": 15,
                    "paddingLeft": 15,
                    "paddingRight": 15,
                    "paddingTop": 15,
                  },
                  undefined,
                ]
              }
            >
              <Text
                fontFamily="Arial"
                style={
                  Array [
                    Object {
                      "color": "#fff",
                      "fontFamily": "Arial",
                      "fontSize": 28,
                    },
                    undefined,
                  ]
                }
                textColor="#fff"
                textSize={28}
              >
                
              </Text>
            </View>
          </View>
        </View>
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "height": "100%",
              "left": 0,
              "opacity": 1,
              "position": "absolute",
              "top": 0,
              "width": 80,
            }
          }
        />
        <View
          style={
            Object {
              "flex": 1,
            }
          }
        >
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignSelf": "flex-end",
                "backgroundColor": "transparent",
                "flexDirection": "row",
                "marginRight": 20,
                "opacity": 1,
                "shadowColor": "rgba(0, 0, 0, 0.8)",
                "shadowOffset": Object {
                  "height": 1,
                  "width": 1,
                },
                "shadowOpacity": 1,
                "shadowRadius": 1,
              }
            }
          >
            <View
              buttonColor="#00ff00"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#00ff00",
                    "height": 70,
                    "justifyContent": "center",
                    "minWidth": 220,
                    "paddingBottom": 15,
                    "paddingLeft": 15,
                    "paddingRight": 15,
                    "paddingTop": 15,
                  },
                  undefined,
                ]
              }
            >
              <Text
                fontFamily="Arial"
                style={
                  Array [
                    Object {
                      "color": "#fff",
                      "fontFamily": "Arial",
                      "fontSize": 28,
                    },
                    undefined,
                  ]
                }
                textColor="#fff"
                textSize={28}
              >
                
              </Text>
            </View>
            <View
              buttonColor="#00ff00"
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "borderBottomColor": "transparent",
                    "borderBottomWidth": 35,
                    "borderColor": "#00ff00",
                    "borderLeftWidth": 30,
                    "borderStyle": "solid",
                    "borderTopColor": "transparent",
                    "borderTopWidth": 35,
                    "height": 0,
                    "width": 0,
                  },
                  undefined,
                ]
              }
            />
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#F80347",
            "justifyContent": "center",
            "marginTop": 80,
            "padding": 20,
            "width": "100%",
          },
          Object {
            "backgroundColor": "#00ff00",
          },
          Object {
            "marginTop": 0,
          },
        ]
      }
    >
      <Text
        style={
          Array [
            Object {
              "color": "#fff",
              "fontFamily": "Arial",
              "fontSize": 55,
              "fontWeight": "bold",
              "textAlign": "center",
            },
            Object {
              "color": "#fff",
              "fontFamily": "Arial",
            },
          ]
        }
      >
        Question text *
      </Text>
    </View>
    <View
      style={
        Object {
          "alignItems": "stretch",
          "flex": 3,
          "paddingHorizontal": 50,
          "paddingTop": 40,
          "width": "100%",
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flex": 1,
            "justifyContent": "center",
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "borderColor": "#dfdfdf",
                "borderRadius": 4,
                "borderWidth": 1,
                "flexDirection": "row",
                "justifyContent": "center",
                "marginBottom": 15,
                "padding": 10,
                "width": "50%",
              },
              Object {
                "backgroundColor": "#00ff00",
              },
            ]
          }
        >
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "justifyContent": "center",
                "opacity": 1,
                "width": 60,
              }
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#fff",
                    "fontFamily": "Arial",
                  },
                  Object {
                    "fontFamily": "FontAwesome5FreeSolid",
                    "textAlign": "center",
                  },
                  Object {
                    "fontSize": 26,
                  },
                ]
              }
            >
              
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "justifyContent": "center",
              }
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#fff",
                    "fontFamily": "Arial",
                  },
                  Object {
                    "fontSize": 26,
                  },
                ]
              }
            >
              1 Jan 2018
            </Text>
          </View>
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "justifyContent": "center",
                "opacity": 1,
                "width": 60,
              }
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#fff",
                    "fontFamily": "Arial",
                  },
                  Object {
                    "fontFamily": "FontAwesome5FreeSolid",
                    "textAlign": "center",
                  },
                  Object {
                    "fontSize": 26,
                  },
                ]
              }
            >
              
            </Text>
          </View>
        </View>
        <View
          style={
            Object {
              "borderColor": "#e6e6e6",
              "borderWidth": 1,
              "flexDirection": "row",
              "opacity": 0,
              "width": "50%",
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "width": "100%",
                },
                Object {
                  "backgroundColor": "#00ff00",
                },
              ]
            }
          >
            <View
              style={
                Object {
                  "flex": 1,
                  "height": 220,
                  "width": undefined,
                }
              }
            >
              <RCTPicker
                items={
                  Array [
                    Object {
                      "label": "1",
                      "textColor": undefined,
                      "value": 1,
                    },
                    Object {
                      "label": "2",
                      "textColor": undefined,
                      "value": 2,
                    },
                    Object {
                      "label": "3",
                      "textColor": undefined,
                      "value": 3,
                    },
                    Object {
                      "label": "4",
                      "textColor": undefined,
                      "value": 4,
                    },
                    Object {
                      "label": "5",
                      "textColor": undefined,
                      "value": 5,
                    },
                    Object {
                      "label": "6",
                      "textColor": undefined,
                      "value": 6,
                    },
                    Object {
                      "label": "7",
                      "textColor": undefined,
                      "value": 7,
                    },
                    Object {
                      "label": "8",
                      "textColor": undefined,
                      "value": 8,
                    },
                    Object {
                      "label": "9",
                      "textColor": undefined,
                      "value": 9,
                    },
                    Object {
                      "label": "10",
                      "textColor": undefined,
                      "value": 10,
                    },
                    Object {
                      "label": "11",
                      "textColor": undefined,
                      "value": 11,
                    },
                    Object {
                      "label": "12",
                      "textColor": undefined,
                      "value": 12,
                    },
                    Object {
                      "label": "13",
                      "textColor": undefined,
                      "value": 13,
                    },
                    Object {
                      "label": "14",
                      "textColor": undefined,
                      "value": 14,
                    },
                    Object {
                      "label": "15",
                      "textColor": undefined,
                      "value": 15,
                    },
                    Object {
                      "label": "16",
                      "textColor": undefined,
                      "value": 16,
                    },
                    Object {
                      "label": "17",
                      "textColor": undefined,
                      "value": 17,
                    },
                    Object {
                      "label": "18",
                      "textColor": undefined,
                      "value": 18,
                    },
                    Object {
                      "label": "19",
                      "textColor": undefined,
                      "value": 19,
                    },
                    Object {
                      "label": "20",
                      "textColor": undefined,
                      "value": 20,
                    },
                    Object {
                      "label": "21",
                      "textColor": undefined,
                      "value": 21,
                    },
                    Object {
                      "label": "22",
                      "textColor": undefined,
                      "value": 22,
                    },
                    Object {
                      "label": "23",
                      "textColor": undefined,
                      "value": 23,
                    },
                    Object {
                      "label": "24",
                      "textColor": undefined,
                      "value": 24,
                    },
                    Object {
                      "label": "25",
                      "textColor": undefined,
                      "value": 25,
                    },
                    Object {
                      "label": "26",
                      "textColor": undefined,
                      "value": 26,
                    },
                    Object {
                      "label": "27",
                      "textColor": undefined,
                      "value": 27,
                    },
                    Object {
                      "label": "28",
                      "textColor": undefined,
                      "value": 28,
                    },
                    Object {
                      "label": "29",
                      "textColor": undefined,
                      "value": 29,
                    },
                    Object {
                      "label": "30",
                      "textColor": undefined,
                      "value": 30,
                    },
                    Object {
                      "label": "31",
                      "textColor": undefined,
                      "value": 31,
                    },
                  ]
                }
                onChange={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                selectedIndex={0}
                style={
                  Array [
                    Object {
                      "height": 216,
                    },
                    Object {
                      "color": "#fff",
                      "fontSize": 26,
                    },
                  ]
                }
              />
            </View>
            <View
              style={
                Object {
                  "flex": 2,
                  "height": 220,
                  "width": undefined,
                }
              }
            >
              <RCTPicker
                items={
                  Array [
                    Object {
                      "label": "January",
                      "textColor": undefined,
                      "value": "January",
                    },
                    Object {
                      "label": "February",
                      "textColor": undefined,
                      "value": "February",
                    },
                    Object {
                      "label": "March",
                      "textColor": undefined,
                      "value": "March",
                    },
                    Object {
                      "label": "April",
                      "textColor": undefined,
                      "value": "April",
                    },
                    Object {
                      "label": "May",
                      "textColor": undefined,
                      "value": "May",
                    },
                    Object {
                      "label": "June",
                      "textColor": undefined,
                      "value": "June",
                    },
                    Object {
                      "label": "July",
                      "textColor": undefined,
                      "value": "July",
                    },
                    Object {
                      "label": "August",
                      "textColor": undefined,
                      "value": "August",
                    },
                    Object {
                      "label": "September",
                      "textColor": undefined,
                      "value": "September",
                    },
                    Object {
                      "label": "October",
                      "textColor": undefined,
                      "value": "October",
                    },
                    Object {
                      "label": "November",
                      "textColor": undefined,
                      "value": "November",
                    },
                    Object {
                      "label": "December",
                      "textColor": undefined,
                      "value": "December",
                    },
                  ]
                }
                onChange={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                selectedIndex={0}
                style={
                  Array [
                    Object {
                      "height": 216,
                    },
                    Object {
                      "color": "#fff",
                      "fontSize": 26,
                    },
                  ]
                }
              />
            </View>
            <View
              style={
                Object {
                  "flex": 1,
                  "height": 220,
                  "width": undefined,
                }
              }
            >
              <RCTPicker
                items={
                  Array [
                    Object {
                      "label": "1995",
                      "textColor": undefined,
                      "value": 1995,
                    },
                    Object {
                      "label": "1996",
                      "textColor": undefined,
                      "value": 1996,
                    },
                    Object {
                      "label": "1997",
                      "textColor": undefined,
                      "value": 1997,
                    },
                    Object {
                      "label": "1998",
                      "textColor": undefined,
                      "value": 1998,
                    },
                    Object {
                      "label": "1999",
                      "textColor": undefined,
                      "value": 1999,
                    },
                    Object {
                      "label": "2000",
                      "textColor": undefined,
                      "value": 2000,
                    },
                    Object {
                      "label": "2001",
                      "textColor": undefined,
                      "value": 2001,
                    },
                    Object {
                      "label": "2002",
                      "textColor": undefined,
                      "value": 2002,
                    },
                    Object {
                      "label": "2003",
                      "textColor": undefined,
                      "value": 2003,
                    },
                    Object {
                      "label": "2004",
                      "textColor": undefined,
                      "value": 2004,
                    },
                    Object {
                      "label": "2005",
                      "textColor": undefined,
                      "value": 2005,
                    },
                    Object {
                      "label": "2006",
                      "textColor": undefined,
                      "value": 2006,
                    },
                    Object {
                      "label": "2007",
                      "textColor": undefined,
                      "value": 2007,
                    },
                    Object {
                      "label": "2008",
                      "textColor": undefined,
                      "value": 2008,
                    },
                    Object {
                      "label": "2009",
                      "textColor": undefined,
                      "value": 2009,
                    },
                    Object {
                      "label": "2010",
                      "textColor": undefined,
                      "value": 2010,
                    },
                    Object {
                      "label": "2011",
                      "textColor": undefined,
                      "value": 2011,
                    },
                    Object {
                      "label": "2012",
                      "textColor": undefined,
                      "value": 2012,
                    },
                    Object {
                      "label": "2013",
                      "textColor": undefined,
                      "value": 2013,
                    },
                    Object {
                      "label": "2014",
                      "textColor": undefined,
                      "value": 2014,
                    },
                    Object {
                      "label": "2015",
                      "textColor": undefined,
                      "value": 2015,
                    },
                    Object {
                      "label": "2016",
                      "textColor": undefined,
                      "value": 2016,
                    },
                    Object {
                      "label": "2017",
                      "textColor": undefined,
                      "value": 2017,
                    },
                    Object {
                      "label": "2018",
                      "textColor": undefined,
                      "value": 2018,
                    },
                    Object {
                      "label": "2019",
                      "textColor": undefined,
                      "value": 2019,
                    },
                    Object {
                      "label": "2020",
                      "textColor": undefined,
                      "value": 2020,
                    },
                    Object {
                      "label": "2021",
                      "textColor": undefined,
                      "value": 2021,
                    },
                    Object {
                      "label": "2022",
                      "textColor": undefined,
                      "value": 2022,
                    },
                    Object {
                      "label": "2023",
                      "textColor": undefined,
                      "value": 2023,
                    },
                    Object {
                      "label": "2024",
                      "textColor": undefined,
                      "value": 2024,
                    },
                    Object {
                      "label": "2025",
                      "textColor": undefined,
                      "value": 2025,
                    },
                    Object {
                      "label": "2026",
                      "textColor": undefined,
                      "value": 2026,
                    },
                    Object {
                      "label": "2027",
                      "textColor": undefined,
                      "value": 2027,
                    },
                    Object {
                      "label": "2028",
                      "textColor": undefined,
                      "value": 2028,
                    },
                    Object {
                      "label": "2029",
                      "textColor": undefined,
                      "value": 2029,
                    },
                    Object {
                      "label": "2030",
                      "textColor": undefined,
                      "value": 2030,
                    },
                    Object {
                      "label": "2031",
                      "textColor": undefined,
                      "value": 2031,
                    },
                    Object {
                      "label": "2032",
                      "textColor": undefined,
                      "value": 2032,
                    },
                    Object {
                      "label": "2033",
                      "textColor": undefined,
                      "value": 2033,
                    },
                    Object {
                      "label": "2034",
                      "textColor": undefined,
                      "value": 2034,
                    },
                    Object {
                      "label": "2035",
                      "textColor": undefined,
                      "value": 2035,
                    },
                    Object {
                      "label": "2036",
                      "textColor": undefined,
                      "value": 2036,
                    },
                    Object {
                      "label": "2037",
                      "textColor": undefined,
                      "value": 2037,
                    },
                    Object {
                      "label": "2038",
                      "textColor": undefined,
                      "value": 2038,
                    },
                    Object {
                      "label": "2039",
                      "textColor": undefined,
                      "value": 2039,
                    },
                    Object {
                      "label": "2040",
                      "textColor": undefined,
                      "value": 2040,
                    },
                    Object {
                      "label": "2041",
                      "textColor": undefined,
                      "value": 2041,
                    },
                    Object {
                      "label": "2042",
                      "textColor": undefined,
                      "value": 2042,
                    },
                    Object {
                      "label": "2043",
                      "textColor": undefined,
                      "value": 2043,
                    },
                    Object {
                      "label": "2044",
                      "textColor": undefined,
                      "value": 2044,
                    },
                  ]
                }
                onChange={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                selectedIndex={23}
                style={
                  Array [
                    Object {
                      "height": 216,
                    },
                    Object {
                      "color": "#fff",
                      "fontSize": 26,
                    },
                  ]
                }
              />
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "alignItems": "flex-end",
          "flexDirection": "row",
          "height": 80,
          "justifyContent": "center",
          "width": "100%",
        }
      }
    >
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      />
      <View
        style={
          Object {
            "alignItems": "flex-end",
            "bottom": 15,
            "justifyContent": "center",
            "position": "absolute",
            "right": 50,
          }
        }
      >
        <Image
          source={
            Object {
              "uri": "printer.png",
            }
          }
          style={
            Object {
              "height": 50,
              "resizeMode": "contain",
              "width": 170,
            }
          }
        />
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`QuestionsScreen component tests Should render dropdown (current) question successfully 1`] = `
Array [
  Object {
    "label": "Yes",
    "value": "Yes",
  },
  Object {
    "label": "No",
    "value": "No",
  },
]
`;

exports[`QuestionsScreen component tests Should render dropdown (current) question successfully 2`] = `
<RCTScrollView
  automaticallyAdjustContentInsets={false}
  contentContainerStyle={
    Array [
      Object {
        "alignItems": "center",
        "flex": 1,
      },
      Object {
        "backgroundColor": "#fff",
      },
    ]
  }
  contentInset={
    Object {
      "bottom": 0,
    }
  }
  enableAutomaticScroll={true}
  enableOnAndroid={false}
  enableResetScrollToCoords={false}
  extraHeight={75}
  extraScrollHeight={0}
  getScrollResponder={[Function]}
  handleOnScroll={[Function]}
  keyboardDismissMode="interactive"
  keyboardOpeningTime={250}
  keyboardSpace={0}
  onScroll={[Function]}
  resetKeyboardSpace={[Function]}
  scrollEventThrottle={1}
  scrollForExtraHeightOnAndroid={[Function]}
  scrollIntoView={[Function]}
  scrollToEnd={[Function]}
  scrollToFocusedInput={[Function]}
  scrollToPosition={[Function]}
  showsVerticalScrollIndicator={true}
  update={[Function]}
  viewIsInsideTabBar={false}
>
  <View>
    <View
      style={
        Array [
          Object {
            "flexDirection": "row",
            "height": 100,
            "width": "100%",
          },
          undefined,
        ]
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
            "width": "100%",
          }
        }
      >
        <View
          style={
            Object {
              "flex": 1,
            }
          }
        >
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignSelf": "flex-start",
                "backgroundColor": "transparent",
                "flexDirection": "row",
                "marginLeft": 20,
                "opacity": 1,
                "shadowColor": "rgba(0, 0, 0, 0.8)",
                "shadowOffset": Object {
                  "height": 1,
                  "width": 1,
                },
                "shadowOpacity": 1,
                "shadowRadius": 1,
              }
            }
          >
            <View
              buttonColor="#00ff00"
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "borderBottomColor": "transparent",
                    "borderBottomWidth": 35,
                    "borderColor": "#00ff00",
                    "borderRightWidth": 30,
                    "borderStyle": "solid",
                    "borderTopColor": "transparent",
                    "borderTopWidth": 35,
                    "height": 0,
                    "width": 0,
                  },
                  undefined,
                ]
              }
            />
            <View
              buttonColor="#00ff00"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#00ff00",
                    "height": 70,
                    "justifyContent": "center",
                    "minWidth": 220,
                    "paddingBottom": 15,
                    "paddingLeft": 15,
                    "paddingRight": 15,
                    "paddingTop": 15,
                  },
                  undefined,
                ]
              }
            >
              <Text
                fontFamily="Arial"
                style={
                  Array [
                    Object {
                      "color": "#fff",
                      "fontFamily": "Arial",
                      "fontSize": 28,
                    },
                    undefined,
                  ]
                }
                textColor="#fff"
                textSize={28}
              >
                
              </Text>
            </View>
          </View>
        </View>
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "height": "100%",
              "left": 0,
              "opacity": 1,
              "position": "absolute",
              "top": 0,
              "width": 80,
            }
          }
        />
        <View
          style={
            Object {
              "flex": 1,
            }
          }
        >
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignSelf": "flex-end",
                "backgroundColor": "transparent",
                "flexDirection": "row",
                "marginRight": 20,
                "opacity": 1,
                "shadowColor": "rgba(0, 0, 0, 0.8)",
                "shadowOffset": Object {
                  "height": 1,
                  "width": 1,
                },
                "shadowOpacity": 1,
                "shadowRadius": 1,
              }
            }
          >
            <View
              buttonColor="#00ff00"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#00ff00",
                    "height": 70,
                    "justifyContent": "center",
                    "minWidth": 220,
                    "paddingBottom": 15,
                    "paddingLeft": 15,
                    "paddingRight": 15,
                    "paddingTop": 15,
                  },
                  undefined,
                ]
              }
            >
              <Text
                fontFamily="Arial"
                style={
                  Array [
                    Object {
                      "color": "#fff",
                      "fontFamily": "Arial",
                      "fontSize": 28,
                    },
                    undefined,
                  ]
                }
                textColor="#fff"
                textSize={28}
              >
                
              </Text>
            </View>
            <View
              buttonColor="#00ff00"
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "borderBottomColor": "transparent",
                    "borderBottomWidth": 35,
                    "borderColor": "#00ff00",
                    "borderLeftWidth": 30,
                    "borderStyle": "solid",
                    "borderTopColor": "transparent",
                    "borderTopWidth": 35,
                    "height": 0,
                    "width": 0,
                  },
                  undefined,
                ]
              }
            />
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#F80347",
            "justifyContent": "center",
            "marginTop": 80,
            "padding": 20,
            "width": "100%",
          },
          Object {
            "backgroundColor": "#00ff00",
          },
          Object {
            "marginTop": 0,
          },
        ]
      }
    >
      <Text
        style={
          Array [
            Object {
              "color": "#fff",
              "fontFamily": "Arial",
              "fontSize": 55,
              "fontWeight": "bold",
              "textAlign": "center",
            },
            Object {
              "color": "#fff",
              "fontFamily": "Arial",
            },
          ]
        }
      >
        Question text *
      </Text>
    </View>
    <View
      style={
        Object {
          "alignItems": "stretch",
          "flex": 3,
          "paddingHorizontal": 50,
          "paddingTop": 40,
          "width": "100%",
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flex": 1,
            "justifyContent": "center",
          }
        }
      >
        <View
          style={
            Object {
              "flexDirection": "row",
              "width": "50%",
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "#fff",
                  "flex": 1,
                  "flexDirection": "row",
                },
                Array [
                  Object {
                    "borderRadius": 4,
                    "borderWidth": 1,
                  },
                  Object {
                    "borderColor": "#00ff00",
                  },
                ],
              ]
            }
          >
            <View
              accessible={true}
              isTVSelectable={true}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "opacity": 1,
                  "paddingHorizontal": 15,
                }
              }
            >
              <Text
                style={
                  Object {
                    "flex": 1,
                    "fontSize": 26,
                  }
                }
              >
                ...
              </Text>
              <Text
                style={
                  Object {
                    "fontFamily": "FontAwesome5FreeSolid",
                    "fontSize": 26,
                    "textAlign": "center",
                    "width": 30,
                  }
                }
              >
                
              </Text>
            </View>
            <Modal
              hardwareAccelerated={false}
              onRequestClose={[Function]}
              transparent={true}
              visible={false}
            >
              <View
                collapsable={false}
                onResponderRelease={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "backgroundColor": "rgba(0, 0, 0, 0.1)",
                    "bottom": 0,
                    "flex": 1,
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "left": 0,
                      "maxHeight": 250,
                      "top": 0,
                      "width": 0,
                    }
                  }
                >
                  <RCTScrollView
                    data={
                      Array [
                        Object {
                          "key": "0_Yes",
                          "label": "Yes",
                          "value": "Yes",
                        },
                        Object {
                          "key": "1_No",
                          "label": "No",
                          "value": "No",
                        },
                      ]
                    }
                    disableVirtualization={false}
                    getItem={[Function]}
                    getItemCount={[Function]}
                    horizontal={false}
                    initialNumToRender={10}
                    keyExtractor={[Function]}
                    maxToRenderPerBatch={10}
                    numColumns={1}
                    onContentSizeChange={[Function]}
                    onEndReachedThreshold={2}
                    onLayout={[Function]}
                    onMomentumScrollEnd={[Function]}
                    onScroll={[Function]}
                    onScrollBeginDrag={[Function]}
                    onScrollEndDrag={[Function]}
                    removeClippedSubviews={false}
                    renderItem={[Function]}
                    scrollEventThrottle={50}
                    stickyHeaderIndices={Array []}
                    style={
                      Array [
                        Object {
                          "backgroundColor": "#fff",
                        },
                      ]
                    }
                    updateCellsBatchingPeriod={50}
                    viewabilityConfigCallbackPairs={Array []}
                    windowSize={21}
                  >
                    <View>
                      <View
                        onLayout={[Function]}
                        style={null}
                      >
                        <View
                          onResponderRelease={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            Array [
                              Object {
                                "paddingHorizontal": 15,
                                "paddingVertical": 5,
                              },
                              Object {},
                            ]
                          }
                        >
                          <Text
                            style={
                              Array [
                                Object {
                                  "fontSize": 26,
                                },
                                Object {},
                              ]
                            }
                          >
                            Yes
                          </Text>
                        </View>
                      </View>
                      <View
                        onLayout={[Function]}
                        style={null}
                      >
                        <View
                          onResponderRelease={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            Array [
                              Object {
                                "paddingHorizontal": 15,
                                "paddingVertical": 5,
                              },
                              Object {},
                            ]
                          }
                        >
                          <Text
                            style={
                              Array [
                                Object {
                                  "fontSize": 26,
                                },
                                Object {},
                              ]
                            }
                          >
                            No
                          </Text>
                        </View>
                      </View>
                    </View>
                  </RCTScrollView>
                </View>
              </View>
            </Modal>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "alignItems": "flex-end",
          "flexDirection": "row",
          "height": 80,
          "justifyContent": "center",
          "width": "100%",
        }
      }
    >
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      />
      <View
        style={
          Object {
            "alignItems": "flex-end",
            "bottom": 15,
            "justifyContent": "center",
            "position": "absolute",
            "right": 50,
          }
        }
      >
        <Image
          source={
            Object {
              "uri": "printer.png",
            }
          }
          style={
            Object {
              "height": 50,
              "resizeMode": "contain",
              "width": 170,
            }
          }
        />
      </View>
    </View>
  </View>
</RCTScrollView>
`;
