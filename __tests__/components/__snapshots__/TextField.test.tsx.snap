// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TextField tests should display validated field with popup 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "width": "100%",
      },
      undefined,
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "#fff",
          "borderColor": "#dfdfdf",
          "borderRadius": 5,
          "borderWidth": 1,
          "flexDirection": "row",
          "width": "100%",
        },
        Object {
          "borderColor": "red",
          "borderWidth": 1,
        },
      ]
    }
  >
    <TextInput
      allowFontScaling={true}
      dispatch={[Function]}
      name="test"
      onChange={[Function]}
      onEndEditing={[Function]}
      rejectResponderTermination={true}
      screen="HOME"
      style={
        Array [
          Object {
            "borderWidth": 0,
            "flex": 1,
            "fontSize": 26,
            "paddingLeft": 20,
          },
          Array [
            Object {
              "borderWidth": 0,
              "flex": 1,
              "fontSize": 26,
              "paddingLeft": 20,
            },
            undefined,
            Object {},
            Object {
              "height": 54,
            },
          ],
          Object {
            "fontFamily": "Arial",
          },
        ]
      }
      underlineColorAndroid="transparent"
      validate={[Function]}
    />
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "justifyContent": "center",
          "opacity": 1,
          "paddingHorizontal": 20,
        }
      }
    >
      <Text
        style={
          Object {
            "color": "#dfdfdf",
            "fontFamily": "FontAwesome5FreeSolid",
            "fontSize": 26,
          }
        }
      >
        ÔÅö
      </Text>
    </View>
  </View>
  <View
    pointerEvents="none"
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#222",
        "bottom": "100%",
        "justifyContent": "center",
        "left": 0,
        "opacity": 0,
        "paddingHorizontal": 20,
        "position": "absolute",
        "width": "100%",
        "zIndex": 1000,
      }
    }
  >
    <Text
      style={
        Object {
          "color": "#fff",
          "fontSize": 20,
          "textAlign": "center",
        }
      }
    >
      popup
    </Text>
  </View>
  <View
    style={
      Object {
        "alignItems": "stretch",
        "justifyContent": "center",
        "paddingHorizontal": 20,
        "width": "100%",
      }
    }
  >
    <Text
      style={
        Object {
          "color": "red",
          "fontSize": 24,
          "textAlign": "center",
        }
      }
    >
      String is empty
    </Text>
  </View>
</View>
`;

exports[`TextField tests should render TextField and pass provided props to it 1`] = `
<TextInput
  allowFontScaling={true}
  autoCorrect={false}
  keyboardType="numeric"
  rejectResponderTermination={true}
  style={
    Array [
      Object {
        "borderWidth": 0,
        "flex": 1,
        "fontSize": 26,
        "paddingLeft": 20,
      },
      undefined,
      Object {
        "fontFamily": undefined,
      },
    ]
  }
  underlineColorAndroid="transparent"
/>
`;

exports[`TextField tests should render TextField successfully 1`] = `
<TextInput
  allowFontScaling={true}
  dispatch={[Function]}
  name="test"
  rejectResponderTermination={true}
  screen="HOME"
  style={
    Array [
      Object {
        "borderWidth": 0,
        "flex": 1,
        "fontSize": 26,
        "paddingLeft": 20,
      },
      Array [
        Object {
          "backgroundColor": "#fff",
          "borderColor": "#dfdfdf",
          "borderRadius": 5,
          "borderWidth": 1,
          "flexDirection": "row",
          "width": "100%",
        },
        undefined,
        Object {
          "paddingRight": 20,
        },
      ],
      Object {
        "fontFamily": "Arial",
      },
    ]
  }
  underlineColorAndroid="transparent"
/>
`;

exports[`TextField tests should render TextField wrapped in View 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "width": "100%",
      },
      undefined,
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "#fff",
          "borderColor": "#dfdfdf",
          "borderRadius": 5,
          "borderWidth": 1,
          "flexDirection": "row",
          "width": "100%",
        },
        Object {},
      ]
    }
  >
    <TextInput
      allowFontScaling={true}
      dispatch={[Function]}
      name="test"
      onChange={[Function]}
      onEndEditing={[Function]}
      rejectResponderTermination={true}
      screen="HOME"
      style={
        Array [
          Object {
            "borderWidth": 0,
            "flex": 1,
            "fontSize": 26,
            "paddingLeft": 20,
          },
          Array [
            Object {
              "borderWidth": 0,
              "flex": 1,
              "fontSize": 26,
              "paddingLeft": 20,
            },
            undefined,
            Object {
              "paddingRight": 20,
            },
            Object {
              "height": 54,
            },
          ],
          Object {
            "fontFamily": "Arial",
          },
        ]
      }
      underlineColorAndroid="transparent"
      validate={[Function]}
    />
  </View>
</View>
`;
